name: PR Factory

on:
  workflow_dispatch: {}
  schedule:
    - cron: "*/30 * * * *"

jobs:
  create-pr:
    # needs: merge-pr
    runs-on: [public-amd64-small]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: trunk install
        uses: trunk-io/trunk-action/install@v1
        with:
          tools: gh jq

      - name: rust cache
        uses: Swatinem/rust-cache@v2

      - name: run code editor
        id: edits
        run: cargo run

      - name: choose next
        id: choose-next
        run: |
          case $(( RANDOM % 3 )) in
          0)
            echo "secret_name=ELI_PAT" >> $GITHUB_OUTPUT
            ;;
          1)
            echo "secret_name=ELI_PAT" >> $GITHUB_OUTPUT
            ;;
          2)
            echo "secret_name=ELI_PAT" >> $GITHUB_OUTPUT
            ;;
          esac

      - name: Create Pull Request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets[steps.choose-next.outputs.secret_name] }}
          commit-message: Moving words ${{ steps.edits.outputs.words }}
          title: Moving ${{ steps.edits.outputs.words }}
          body: Moving ${{ steps.edits.outputs.words }}
          branch: content/${{ steps.edits.outputs.words-in-one }}

      - name: Comment on PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueComment = '/trunk merge';
            github.rest.issues.createComment({
              issue_number: ${{ steps.create-pull-request.ouputs.pull-request-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: issueComment,
            });

